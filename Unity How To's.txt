"C:\Users\cosse\Documents\GitKraken Files\UVU_DGM1610_Summer2022\New Unity Project\Assets\UnityProject1.unity"
^the location of my Unity Project

Code Words for C # in Unity

//base
using UnityEngine;
using System.Collections;

public class NewBehaviourScript : MonoBehaviour {
    //the public class MonoBehaviour is like the Main class- it is the class to call to

    // Use this for initialization
    void Start () {
    
    }
    
    // Update is called once per frame
    void Update () {
    
    }
}

//to use in an update class:
//input keyboard info and edit rendering info
    if (Input.GetKeyDown(KeyCode.R))
        {
            GetComponent<Renderer> ().material.color = Color.red;
        }

//writes stuff
Debug.Log("words to write"); 


Scripts
Scripts is where you'll put behavior code for an object. 
an object will obey a script only if that script is applied to the object
To create a new script: Assets > Create > New C # Script 

Variable Note: (declaration) = (initialization);

Functions
public class VariablesAndFunctions : MonoBehaviour
{   
    int myInt = 5;
    //this is the initial declaration of the int myInt
    
    void Start ()
    //this function runs upon starting. void means no return
    {
        myInt = MultiplyByTwo(myInt);
        //redeclaring myInt to = calling the function MultiplyByTwo using the original myInt
        Debug.Log (myInt);
        //write what the new myInt equals
    }
    
    
    int MultiplyByTwo (int number)
    //new function called MultiplyByTwo. int means return an int; declared temporary int to use in the function
    {
        int result; //new integer specifically to be the result
        result = number * 2; //performing operation
        return result; //using the word return to return the integer it came up with and make the call work
    }
}
//this script should write 10

Comments and Disablers
//single line 
/* multiple line */

Classes are like custom components 
you can attach a script by dragging the script asset to a Game Object in the hierarchy panel or to the 
inspector of the Game Object that is currently selected
Or you can go the the Component Menu > Scripts
Variables with in a class can be edited with the component editor just like any other component. 
Edit variables in the inspector
To see a variable within the inspector, decalre it as public
Unity capitalizes things sometimes? (m_, k, _, Capitalizes, adds spaces between capitals, adds spaces between acronyms)

I skipped prefab bc brain hurt and also idk wtf a prefab is (pre-fabricated asset maybe?)

Order of Execution:
start:
Initialization > Physics > Input events > Game Logic > Scene, Gizmo, GUI Rendering > End of Frame, Pause, Update Loops, Decommissioning
functions: 
Awake, OnEnable, Reset, OnValidate, Start, OnApplicationPause, 
FixedUpdate (independent of frames), Update (1x per frame), Late Update (after Update),  
animations: 
OnStateMachineEnter, OnStateMachineUpdate, OnStateMachineExit, FireAnimationEvents, On AnimatorMove, StateMachineBehaviour(OnStateMove), WriteProperties
rendering: 
OnPreCull, OnBecameVisible/OnBecameInvisible, OnWillRenderObject, OnPreRender, OnRenderObject, OnPostRender, OnRenderImage, OnGUI, OnDrawGizmos
coroutines (yield):
yield, yield WaitForSeconds, yield WaitForFixedUpdate, yield WWW, yield StartCoroutine
end:
OnDestroy, OnApplicationQuit, OnDisable


